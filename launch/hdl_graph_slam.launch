<?xml version="1.0"?>
<launch>
  <!-- arguments -->
    <!-- <param name="use_sim_time" value="true" /> -->
    <rosparam file="$(find hdl_graph_slam)/config/param.yaml" command="load" />

  <arg name="nodelet_manager" default="velodyne_nodelet_manager" />
  <arg name="enable_floor_detection" default="false" />
  <arg name="enable_gps" default="false" />
  <arg name="enable_imu_acc" default="false" />
  <arg name="enable_imu_ori" default="false" />

  <arg name="points_topic" default="/velodyne_points" />
  <arg name="map_frame_id" default="map" />
  <arg name="lidar_odom_frame_id" default="odom" />


  <arg name="robot_odom_frame_id" default="robot_odom" />

  <!-- transformation between lidar and base_link -->
  <node pkg="tf" type="static_transform_publisher" name="lidar2base_publisher" args="0 0 0 0 0 0 base_link velodyne 10" />

  <!-- in case you use velodyne_driver, comment out the following line -->
  <!-- <node pkg="nodelet" type="nodelet" name="$(arg nodelet_manager)" args="manager" output="screen"/> -->

  <!-- prefiltering_nodelet -->
  <node pkg="hdl_graph_slam" type="prefiltering_nodelet" name="prefiltering_nodelet" output="screen"/>

  <!-- scan_matching_odometry_nodelet -->
  <node pkg="hdl_graph_slam" type="scan_matching_odometry_nodelet" name="scan_matching_odometry_nodelet" output="screen"/>

  <!-- floor_detection_nodelet -->
  <node pkg="hdl_graph_slam" type="floor_detection_nodelet" name="floor_detection_nodelet" output="screen"/>

  <!-- hdl_graph_slam_nodelet -->
  <node pkg="hdl_graph_slam" type="hdl_graph_slam_nodelet" name="hdl_graph_slam_nodelet" output="screen"/>

  <node pkg="hdl_graph_slam" type="map2odom_publisher.py" name="map2odom_publisher" />
  <!--- Run Rviz-->
  <node pkg="rviz" type="rviz" name="hdl_graph_slam_rviz" args="-d $(find hdl_graph_slam)/rviz/hdl_graph_slam.rviz" />

</launch>
